# This script prompts for the DigitalOcean access keys and encrypts them to
# files.  The GPG key is created if it doesn't already exist and is named with
# the environment.  The encrypted files will be placed in the environment's directory.

# TF_VAR_* variables from the output of decrypting each
# encrypted file that was generated by the encrypt_tfvars.sh script.

# Usage: Source the script and pass in the environment directory.
# Example for development:
# source encrypt_tfvars.sh development


if [ -d "$1" ]; then

  gpg --quick-generate-key "puzzlemassive$1" default encr
  qgk_err_code=$?
  if [ $qgk_err_code -eq 2 -o $qgk_err_code -eq 1 -o $qgk_err_code -eq 0 ]; then
    if [ $qgk_err_code -eq 2 -o $qgk_err_code -eq 1 ]; then
      echo "Using existing key: puzzlemassive$1"
    elif [ $qgk_err_code -eq 0 ]; then
      echo "Using new key: puzzlemassive$1"
    else
      echo "error $qgk_err_code"
    fi
    TEMP_DIR=$(mktemp -d)

    source secure_tfvars.sh
    echo "$TF_VAR_do_token" > $TEMP_DIR/do_token
    echo "$TF_VAR_do_spaces_access_key_id" > $TEMP_DIR/do_spaces_access_key_id
    echo "$TF_VAR_do_spaces_secret_access_key" > $TEMP_DIR/do_spaces_secret_access_key
    echo "$TF_VAR_do_app_spaces_access_key_id" > $TEMP_DIR/do_app_spaces_access_key_id
    echo "$TF_VAR_do_app_spaces_secret_access_key" > $TEMP_DIR/do_app_spaces_secret_access_key

    for secret in do_token do_spaces_access_key_id do_spaces_secret_access_key do_app_spaces_access_key_id do_app_spaces_secret_access_key; do
      gpg --encrypt --recipient "puzzlemassive$1" --armor --output $1/.$secret \
        --comment "Puzzle Massive tfvars" \
        --comment "$1" \
        --comment "TF_VAR_$secret" \
        $TEMP_DIR/$secret
      shred --zero --remove $TEMP_DIR/$secret
    done

  else
    echo "Failed to encrypt secret."
  fi

else
  echo "First arg should be a directory where the encrypted files will go."
fi

